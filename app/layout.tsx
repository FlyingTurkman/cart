import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import MainMenu from "@/components/layout/MainMenu";
import SiteContextProvider from "@/context/SiteContextProvider";
import { productType } from "@/types";
import { apiBasePath } from "@/lib/src/constants";
import { Toaster } from "@/components/ui/sonner";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const allProducts = await getAllProducts()

  return (
    <html lang="tr">
      <SiteContextProvider
      allProducts={allProducts}
      >
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <MainMenu/>
          {children}
          <Toaster/>
        </body>
      </SiteContextProvider>
    </html>
  );
}

async function getAllProducts(): Promise<productType[]> {
  try {
    

    const res = await fetch(`${apiBasePath}/products`)

    const response = await res.json()

    return response
  } catch (error) {
    console.log('Error: ', error)

    return []
  }
}
